{"version":3,"sources":["./src/app/signup-page/signup-page.component.ts","./src/app/signup-page/signup-page.component.html","./src/app/contact-preview/contact-preview.component.ts","./src/app/contact-preview/contact-preview.component.html","./src/app/moves-list/moves-list.component.ts","./src/app/moves-list/moves-list.component.html","./src/services/userService.ts","./src/environments/environment.ts","./src/app/chart/chart.component.ts","./src/app/chart/chart.component.html","./src/services/bitcoinService.ts","./src/app/transfer-fund/transfer-fund.component.ts","./src/app/transfer-fund/transfer-fund.component.html","./src/app/Home-page/home-page.component.ts","./src/app/Home-page/home-page.component.html","./src/services/contactService.ts","./src/app/app-header/app-header.component.ts","./src/app/app-header/app-header.component.html","./src/app/contact-filter/contact-filter.component.ts","./src/app/contact-filter/contact-filter.component.html","./src/app/models/contact.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/statistic-page/statistic-page.component.ts","./src/app/statistic-page/statistic-page.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/app.module.ts","./src/app/contact-details-page/contact-details-page.component.ts","./src/app/contact-details-page/contact-details-page.component.html","./src/app/contact-edit/contact-edit.component.ts","./src/app/contact-edit/contact-edit.component.html","./src/app/contact-list/contact-list.component.ts","./src/app/contact-list/contact-list.component.html","./src/app/contact-page/contact-page.component.ts","./src/app/contact-page/contact-page.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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CJ;QADqC,iMAA2B,qFAAU,gCAAwB,IAAlC;QAA5D,4DACJ;QAAA,4DAAU;;QAD2B,0DAA2B;QAA3B,sFAA2B;;6FDOnD,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;uHAEU,SAAS;kBAAlB,oDAAM;;;;;;;;;;;;;;AETR;AAAA;AAAO,MAAM,OAAO;IAEhB,YAAmB,GAAY,EAAS,OAAe,EAAE,EAAS,QAAgB,EAAE,EAAS,QAAgB,EAAE;QAA5F,QAAG,GAAH,GAAG,CAAS;QAAS,SAAI,GAAJ,IAAI,CAAa;QAAS,UAAK,GAAL,KAAK,CAAa;QAAS,UAAK,GAAL,KAAK,CAAa;IAE/G,CAAC;IAED,KAAK;QACD,4BAA4B;QAC5B,sBAAsB;IAC1B,CAAC;CACJ;;;;;;;;;;;;ACVD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2B;;;;;;;;;;;;ACnSA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICAlD,6EACI;IAAA,qEAAI;IAAA,uEAAY;IAAA,4DAAK;IACrB,sEAAoC;IACpC,qEAAK;IAAA,2FAA+B;IAAA,4DAAK;IACzC,sEAA8C;IAClD,4DAAU;;;IAHC,0DAAoB;IAApB,oFAAoB;IAEpB,0DAA8B;IAA9B,8FAA8B;;ADKlC,MAAM,sBAAsB;IAIjC,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAHlD,gBAAW,GAAG,IAAI;QAClB,0BAAqB,GAAG,IAAI;IAE0B,CAAC;IAEvD,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE;QACtB,IAAI,CAAC,yBAAyB,EAAE;IAElC,CAAC;IAED,eAAe;QACb,IAAI,C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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from './../../services/userService';\n\n@Component({\n  selector: 'signup-page',\n  templateUrl: './signup-page.component.html',\n  styleUrls: ['./signup-page.component.scss']\n})\nexport class SignupPageComponent implements OnInit {\n\n  name: string\n\n  constructor(private userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSignup(ev) {\n    ev.preventDefault()\n    console.log(this.name);\n    this.userService.signup(this.name)\n    this.router.navigateByUrl('');\n  }\n\n}\n","\n<form className=\"signUp-form align-center justify-center flex col\">\n    <!-- <img src={bitcoin} /> -->\n    <label class=\"signup-label\" htmlFor=\"name\">Please entar your name</label>\n    <input type=\"text\" name=\"name\" [(ngModel)]=\"name\"  placeholder=\"Enter Your Name\" />\n    <button class=\"signup-btn\" (click)=\"onSignup($event)\" >Sign Up</button>\n</form> \n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'contact-preview',\n  templateUrl: './contact-preview.component.html',\n  styleUrls: ['./contact-preview.component.scss']\n})\nexport class ContactPreviewComponent implements OnInit {\n  @Input() contact: any;\n  constructor() { }\n\n  ngOnInit(): void {\n    // console.log(this.contact);\n\n  }\n\n}\n","<section class=\"conact-preview flex align-center\">\n    <img class=\"contact-img\" [src]=\"'https://robohash.org/'+ contact._id + '?set=set5'\">\n    <p>{{contact.name}} </p>\n    <p>{{contact.phone}}</p>\n</section>","import { Component, Input, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'moves-list',\n  templateUrl: './moves-list.component.html',\n  styleUrls: ['./moves-list.component.scss']\n})\nexport class MovesListComponent implements OnInit {\n@Input() user:any\n@Input() contact:any\n\n  userMoves: any\n\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(this.user.moves);\n    if(this.contact) {\n      this.userMoves =this.user.moves\n      const userMoves = this.user.moves\n          const currUserMoves = userMoves.filter(move => move.toId === this.contact._id)\n          console.log(currUserMoves);\n          this.userMoves = currUserMoves\n    } else {\n      this.userMoves = this.user.moves\n      const lastMoves = []\n      if (this.user.moves) {\n          for (var i = 0; i < this.user.moves.length; i++) {\n              lastMoves.push(this.user.moves[i])\n              if (lastMoves.length > 2) {\n                this.userMoves = lastMoves; return\n              } else {\n                this.userMoves = lastMoves\n              }\n          }\n      }\n     \n    }\n    \n  }\n\n}\n","<section class=\"move-list\">\n    <li *ngFor=\"let move of userMoves; let i = index\">\n        <h3 *ngIf=\"!contact\" >To: {{move.to}} </h3>\n        <h3>At: {{move.at}} </h3>\n        <h3>Amount: {{move.amount}} </h3>  \n    </li>\n</section>\n","\r\nimport { Injectable } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst KEY: string = 'userDb'\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n    constructor() { }\r\n    private user = { name: 'Ochoa Hyde', coins: 100, moves: [] }\r\n\r\n\r\n\r\n    public getUser() {\r\n        var user = this._loadFromStorage(KEY)\r\n        // if (!user) user = this.user \r\n        return user\r\n    }\r\n\r\n    public signup(name) {\r\n        var user = {\r\n          name: name,\r\n          coins: 100,\r\n          moves: [],\r\n          _id: this._makeId(),\r\n          imgUrl: `https://robohash.org/${name}?set=set5`\r\n        }\r\n        this._storeToStorage(KEY, user)\r\n        return user\r\n      }\r\n      \r\n\r\n      public logout() {\r\n        localStorage.clear();\r\n      }\r\n\r\n      public addMove(contact, amount) {\r\n        return {\r\n          toId: contact._id,\r\n          to: contact.name,\r\n          at: moment(new Date).format('MMMM Do YYYY'),\r\n          amount: amount\r\n        }\r\n      }\r\n\r\n      public saveUser(user) {\r\n        this._storeToStorage(KEY, user)\r\n        // _updateUser(user)\r\n      }\r\n      \r\n      \r\n      // public _updateUser(user) {\r\n      //   const userIdx = gUsers.findIndex(currUser => currUser._id === user._id)\r\n      //   if (userIdx !== -1) {\r\n      //       gUsers.splice(userIdx, 1, user)\r\n      //       localStorage.setItem('users', JSON.stringify(gUsers))\r\n      //   }\r\n      // }\r\n\r\n\r\n\r\n      \r\n    private _storeToStorage(key, value) {\r\n        localStorage.setItem(key, JSON.stringify(value) || null);\r\n    }\r\n    \r\n    private _loadFromStorage(key) {\r\n        let data = localStorage.getItem(key);\r\n        return (data) ? JSON.parse(data) : undefined;\r\n    }\r\n    \r\n    private _makeId(length = 5) {\r\n        var txt = '';\r\n        var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        for (var i = 0; i < length; i++) {\r\n            txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n        }\r\n        return txt;\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\n\n@Component({\n  selector: 'chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.scss']\n})\nexport class ChartComponent implements OnInit {\n  // @Input() confirmedTransactions: any\n  // @Input() marketPrice: any\n  @Input() data\n  @Input() columns: any\n\n  \n  constructor() { }\n  type = 'LineChart'\n  // columns = [1, 4, 5, 7, 3, 10]\n  \n\n  ngOnInit(): void {\n    // console.log(this.confirmedTransactions);\n    // console.log(this.marketPrice);\n    console.log('this.data:', this.data)\n  }\n\n\n}\n","<section>\n    <!-- <p>chart works!</p> -->\n   \n    <google-chart *ngIf=\"data\" style=\"width: 80%;\" [type]=\"type\" [data]=\"data\" [columns]=\"columns\"></google-chart>\n    <!-- <h2>{{confirmedTransactions.name}}</h2>\n    <google-chart *ngIf=\"marketPrice\" style=\"width: 100%;\" [type]=\"type\" [data]=\"marketPrice.values.x\" [columns]=\"columns\"></google-chart> -->\n</section>\n","// import axios from 'axios';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BitcoinService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getRate() {\r\n    return this.http.get(`https://blockchain.info/tobtc?currency=USD&value=1`);\r\n  }\r\n\r\n\r\n  public getMarketPrice() {\r\n    var marketPrice = this.http.get(`https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true`)\r\n    return marketPrice\r\n\r\n  }\r\n\r\n\r\n  public getConfirmedTransactions() {\r\n    var confirmedTransactions = this.http.get(`https://api.blockchain.info/charts/n-transactions?timespan=5months&format=json&cors=true`)\r\n    return confirmedTransactions\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from './../../services/userService';\nimport { Contact } from './../models/contact';\n\n@Component({\n  selector: 'transfer-fund',\n  templateUrl: './transfer-fund.component.html',\n  styleUrls: ['./transfer-fund.component.scss']\n})\nexport class TransferFundComponent implements OnInit {\n\n  user= null\n  amount: number= null\n\n\n  constructor(private userService: UserService) { }\n  @Input() contact: any;\n\n  ngOnInit(): void {\n    this.user = this.userService.getUser()\n    console.log(this.user);\n    \n  }\n\n  onTransfer(ev) {\n    ev.preventDefault()\n        if(this.amount <= this.user.coins) {\n          this.user.coins -= this.amount\n          this.user.moves.push(this.userService.addMove(this.contact, this.amount))\n            this.userService.saveUser(this.user)\n            this.amount = null\n        }\n  }\n  \n\n}\n","\n<section>\n    <form>\n        <label>Amount: </label>\n        <input type=\"number\" name=\"amount\"  [(ngModel)]=\"amount\"  />\n        <button (click)=\"onTransfer($event)\">Transfer</button>\n    </form>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { BitcoinService } from './../../services/bitcoinService';\nimport { UserService } from './../../services/userService';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent implements OnInit {\n  rate = null\n  user: any \n  constructor(private bitcoinService: BitcoinService, private userService: UserService, private router:Router) { }\n\n  ngOnInit(): void {\n    this.bitcoinService.getRate().subscribe((rate: number) => {\n     this.rate = 1 / rate\n    })\n    this.user = this.userService.getUser()\n    \n  }\n\n  logout() {\n    this.userService.logout()\n    this.router.navigateByUrl('signup')\n  }\n\n\n}\n","<section class=\"home-page\">\n    <h3> Name: {{user.name}} </h3>\n    <h3> Coins {{user.coins}} </h3>\n    <h3> Bitcoin Rate: {{rate}} </h3>\n    <moves-list [user]=\"user\" ></moves-list>\n    <button *ngIf=\"user\" (click)=\"logout()\" >logout</button>\n</section>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, throwError, of } from 'rxjs';\nimport { Contact } from '../app/models/contact';\n\nconst CONTACTS = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\",\n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\",\n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\",\n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\",\n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\",\n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n\n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\",\n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\",\n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\",\n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\",\n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  //mock the server\n  private _contacts: Contact[] = CONTACTS;\n  private _contacts$ = new BehaviorSubject<Contact[]>([])\n  public contacts$ = this._contacts$.asObservable()\n\n  constructor() {\n  }\n\n\n  public loadContacts(filterBy = null): void {\n    let contacts = this._contacts;\n    if (filterBy && filterBy.term) {\n      contacts = this._filter(contacts, filterBy.term,)\n    }\n    this._contacts$.next(this._sort(contacts))\n  }\n\n\n  public getContactById(id: string): Observable<Contact> {\n    //mock the server work\n    const contact = this._contacts.find(contact => contact._id === id)\n\n    //return an observable\n    return contact ? of(contact) : Observable.throw(`Contact id ${id} not found!`)\n  }\n\n  public remove(id: string) {\n    //mock the server work\n    this._contacts = this._contacts.filter(contact => contact._id !== id)\n\n    // change the observable data in the service - let all the subscribers know\n    this._contacts$.next(this._contacts)\n  }\n\n  public save(contact: Contact) {\n    return contact._id ? this._updateContact(contact) : this._addContact(contact)\n  }\n\n  private _updateContact(contact: Contact) {\n    //mock the server work\n    this._contacts = this._contacts.map(c => contact._id === c._id ? contact : c)\n    // change the observable data in the service - let all the subscribers know\n    this._contacts$.next(this._sort(this._contacts))\n    return of(contact)\n  }\n\n  private _addContact(contact: Contact) {\n    //mock the server work\n    const newContact = new Contact(undefined, contact.name, contact.email, contact.phone);\n    // newContact.setId();\n    const id = this._makeId()\n    newContact._id = id\n    this._contacts.push(newContact)\n    this._contacts$.next(this._sort(this._contacts))\n    console.log(newContact);\n    \n    return of(newContact)\n  }\n\n  private _sort(contacts: Contact[]): Contact[] {\n    return contacts.sort((a, b) => {\n      if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n        return -1;\n      }\n      if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n        return 1;\n      }\n\n      return 0;\n    })\n  }\n\n  public getEmptyContact() {\n            return { name: '', email: '', phone: '' }\n          }\n\n  private _filter(contacts, term) {\n    term = term.toLocaleLowerCase()\n    return contacts.filter(contact => {\n      return contact.name.toLocaleLowerCase().includes(term) ||\n        contact.phone.toLocaleLowerCase().includes(term) ||\n        contact.email.toLocaleLowerCase().includes(term)\n    })\n  }\n\n  private _makeId(length = 5) {\n    var txt = '';\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < length; i++) {\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return txt;\n}\n}\n\n\n\n\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class ContactService {\n\n//   //mock the server\n//   private _contacts$ = new BehaviorSubject<Contact[]>([])\n//   public contacts$ = this._contacts$.asObservable()\n\n//   constructor() {\n//   }\n\n\n//   public loadContacts(filterBy = null): void {\n//     let contacts = this._contacts$.getValue();\n//     if (!contacts.length) contacts = CONTACTS\n//     if (filterBy && filterBy.term) {\n//       contacts = this._filter(contacts, filterBy.term)\n//     } else {\n//       contacts = CONTACTS\n//     }\n//     this._contacts$.next(this._sort(contacts))\n//   }\n\n//   public getContactById(id: string): Observable<Contact> {\n//     //mock the server work\n//     const contact = this._contacts$.getValue().find(contact => contact._id === id)\n\n//     //return an observable\n//     return contact ? of(contact) : throwError(`Contact id ${id} not found!`)\n//   }\n\n//   public remove(id: string) {\n//     console.log(id);\n    \n//     //mock the server work\n//     const contacts = this._contacts$.getValue().filter(contact => contact._id !== id)\n\n//     // change the observable data in the service - let all the subscribers know\n//     this._contacts$.next(contacts)\n//   }\n\n//   public save(contact: Contact) {\n//     console.log(contact);\n//     return contact._id ? this._updateContact(contact) : this._addContact(contact)\n//     // return contact._id ? this._edit(contact) : this._add(contact)\n//   }\n\n//   private _updateContact(contact: Contact) {\n//     //mock the server work\n//     const contacts = this._contacts$.getValue().map(c => contact._id === c._id ? contact : c)\n//     // change the observable data in the service - let all the subscribers know\n//     this._contacts$.next(this._sort(contacts))\n\n//     return this.contacts$\n//   }\n\n//   private _addContact(contact: Contact) {\n//     //mock the server work\n//     const newContact = new Contact(undefined, contact.name, contact.email, contact.phone);\n//     newContact.setId();\n//     const contacts = [...this._contacts$.getValue(), newContact]\n//  \n//     this._contacts$.next(this._sort(contacts))\n\n//     return this.contacts$\n//     // return contacts\n//   }\n\n//   private _sort(contacts: Contact[]): Contact[] {\n//     return contacts.sort((a, b) => {\n//       if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n//         return -1;\n//       }\n//       if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n//         return 1;\n//       }\n\n//       return 0;\n//     })\n//   }\n\n//   public getEmptyContact() {\n//         return { name: '', email: '', phone: '' }\n//       }\n\n//   private _filter(contacts, term) {\n//     term = term.toLocaleLowerCase()\n//     return contacts.filter(contact => {\n//       return contact.name.toLocaleLowerCase().includes(term) ||\n//         contact.phone.toLocaleLowerCase().includes(term) ||\n//         contact.email.toLocaleLowerCase().includes(term)\n//     })\n//   }\n// }\n\n\n\n\n\n// debugger.json - service =  work with json server\n\n\n// import { Injectable } from '@angular/core';\n// import {tap} from 'rxjs/operators'\n// import { BehaviorSubject, throwError } from 'rxjs';\n// import { HttpClient } from '@angular/common/http';\n\n// import { retry, catchError, map } from 'rxjs/operators';\n// import { Contact } from './../app/models/contact';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class ContactService {\n//   constructor(private http: HttpClient) { }\n\n//   private BASE_URL = 'http://localhost:3000/contact'\n\n//   private _contacts$ = new BehaviorSubject<Contact[]>([]);\n//   public contacts$ = this._contacts$.asObservable()\n//   public isUserAdmin() {\n//     return Promise.resolve(Math.random() > 0.5)\n//   }\n//   public loadContacts(filterBy = { name: '' }) {\n//     this.http.get<Contact[]>(this.BASE_URL)\n//       .pipe(\n//         map(contacts => {\n//           return contacts.filter(({ name }) => {\n//             return name.toLowerCase().includes(filterBy.name.toLowerCase());\n//           })\n//         })\n//       ).subscribe(contacts => {\n//         // console.log('load contacts', contacts);\n//         this._contacts$.next(contacts);\n//       })\n//   }\n\n//   public remove(contactId) {\n//     const removedContact$ = this.http.delete(this.BASE_URL + `/${contactId}`)\n//     removedContact$.subscribe(data => {\n//       const contacts = this._contacts$.getValue().filter(contact => contact._id !== contactId)\n//       this._contacts$.next(contacts)\n//       // Does the same thing ~\n//       // const contacts = this._contacts$.getValue().filter(contact => contact.id !== contactId)\n//       // this._contacts$.next(contacts);\n//     })\n//     return removedContact$\n//   }\n//   getEmptyContact() {\n//     return { name: '', email: '', phone: '' }\n//   }\n//   public getContactById(id) {\n//     return this.http.get<Contact>(this.BASE_URL + `/${id}`)\n//       .pipe(\n//         retry(1),\n//         catchError(() => throwError('no contact found!'))\n//       );\n//     //   const contact = this._contacts.find(contact => contact.id === id)\n//     // return contact ? of(contact) : throwError('no contact found')\n//   }\n//   public save(contact) {\n//     // console.log(contact);\n//     return contact._id ? this._edit(contact) : this._add(contact) \n//   }\n//   private _add(contact) {\n//     console.log('add', contact);\n//     return this.http.post<Contact>(this.BASE_URL, contact).pipe(\n//       tap(contact => {\n//           const contacts = [...this._contacts$.getValue(), contact] \n//           this._contacts$.next(contacts)\n\n//       })\n//     )\n//     // const contact$ = this.http.post<Contact>(this.BASE_URL, contact)\n//     // contact$.subscribe(contact => {\n//     //   const contacts = [...this._contacts$.getValue(), contact] \n//     //   this._contacts$.next(contacts)\n//     // })\n//     // return contact$\n//   }\n//   private _edit(contact) {\n//     console.log('contact edit', contact);\n//     const contact$ = this.http.put<Contact>(this.BASE_URL + `/${contact._id}`, contact)\n//     contact$.subscribe(contact => {\n//       const contacts = [...this._contacts$.getValue(), contact]\n//       this._contacts$.next(contacts)\n//     })\n//     return contact$\n//   }\n//   shouldBuyContact(contact: Contact) {\n//     // TODO: UPDATE TO HttpClient\n//     return this.http.get<{ answer: string }>('https://yesno.wtf/api')\n//       .pipe(map(res => res.answer))\n//     // return res.data.answer\n//   }\n\n// }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from './../../services/userService';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './app-header.component.html',\n  styleUrls: ['./app-header.component.scss']\n})\nexport class AppHeaderComponent implements OnInit {\n// @Input() user:any\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n  }\n\n  // logout() {\n  //   this.userService.logout()\n  // }\n\n}\n","<!-- <section class=\"app-header\"> -->\n<nav class=\"app-header\">\n    <a routerLink='' routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\">Home</a>\n    <a routerLink='contact'>Contact</a>\n    <!-- <button *ngIf=\"user\" (click)=\"logout()\" >logout</button> -->\n</nav>\n<!-- </section> -->","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ContactService } from './../../services/contactService';\n\n@Component({\n  selector: 'contact-filter',\n  templateUrl: './contact-filter.component.html',\n  styleUrls: ['./contact-filter.component.scss']\n})\nexport class ContactFilterComponent implements OnInit {\n @Output() setFilter = new EventEmitter()\n\n    constructor(private contactService: ContactService) { }\n    filterBy = {\n      term: ''\n    }\nngOnInit(): void {\n\n}\n\n\n}\n","<section class=\"contact-filter\">\n    <input type=\"text\" class=\"input\" [(ngModel)]=\"filterBy.term\" (input)=\"setFilter.emit(filterBy)\" name=\"term\" placeholder=\"Search a contact..\"/>\n</section>\n\n","export class Contact {\n\n    constructor(public _id?: string, public name: string = '', public email: string = '', public phone: string = '') {\n\n    }\n\n    setId?() {\n        // Implement your own set Id\n        // this._id = makeId()\n    }\n}","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component, OnInit } from '@angular/core';\nimport { BitcoinService } from './../../services/bitcoinService';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'statistic-page',\n  templateUrl: './statistic-page.component.html',\n  styleUrls: ['./statistic-page.component.scss']\n})\nexport class StatisticPageComponent implements OnInit {\n  marketPrice = null\n  confirmedTransactions = null\n\n  constructor(private bitcoinService: BitcoinService) { }\n\n  ngOnInit(): void {\n    this.loadMarketPrice()\n    this.loadConfirmedTransactions()\n\n  }\n\n  loadMarketPrice() {\n    this.bitcoinService.getMarketPrice().subscribe((marketPrice: any) => {\n      this.marketPrice = this.convertData(marketPrice)\n      // this.marketPrice = marketPrice.values\n      // console.log(this.marketPrice);\n    })\n  }\n\n  loadConfirmedTransactions() {\n    this.bitcoinService.getConfirmedTransactions().subscribe((confirmedTransactions: any) => {\n      this.confirmedTransactions = this.convertData(confirmedTransactions)\n      // console.log(confirmedTransactions.values);\n      // this.confirmedTransactions = confirmedTransactions.values\n    })\n\n  }\n\n  private convertData(data) {\n    console.log(data);\n    \n    const newData = data.values.slice(130, 150)\n    const convertData = newData.map(value => {\n      // console.log(value.y);\n      // const newDate = new Date(value.y * 140000000)\n      const newDate = new Date()\n      // console.log(newDate);\n      // let date = moment(newDate).format('YYYY-MM-DD')\n      // return [date, value.x]\n      return [value.y, value.x]\n    })\n    return convertData\n  }\n\n}\n","<section *ngIf=\"marketPrice && confirmedTransactions\" class=\"statistic-page\">\n    <h2>market price</h2>\n    <chart [data]=\"marketPrice\"></chart>\n    <h2> Confirmed Transactions Per Day </h2>\n    <chart [data]=\"confirmedTransactions\"></chart>\n</section>","import { Component } from '@angular/core';\nimport { UserService } from './../services/userService';\n@Component({\n  selector: 'app-root', \n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Mister-Bitcoin';\n  user: any \n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.user = this.userService.getUser()\n    console.log(this.user);\n    \n  }\n}\n","<section class=\"app\">\n  <!-- <home-page></home-page>\n  <contact-page></contact-page>\n  <contact-details-page></contact-details-page>\n  <statistic-page></statistic-page> -->\n  <!-- <nav>\n    <a routerLink='' routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\">Home</a>\n    <a routerLink='about'>About</a>\n  </nav> -->\n  <app-header></app-header>\n  <router-outlet></router-outlet>\n</section>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from './../../services/userService';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private userService: UserService, private router: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const user = this.userService.getUser()\n    if(user){\n      return true;\n    } else {\n      this.router.navigate(['signup']);\n      ///////the same////////\n      // this.router.navigateByUrl('signup');\n      return false\n    }\n  }\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomePageComponent } from './Home-page/home-page.component';\nimport { ContactPageComponent } from './contact-page/contact-page.component';\nimport { ContactDetailsPageComponent } from './contact-details-page/contact-details-page.component';\nimport { StatisticPageComponent } from './statistic-page/statistic-page.component';\nimport { ContactListComponent } from './contact-list/contact-list.component';\nimport { ContactPreviewComponent } from './contact-preview/contact-preview.component';\nimport { ChartComponent } from './chart/chart.component';\nimport { ContactFilterComponent } from './contact-filter/contact-filter.component';\nimport { FormsModule } from '@angular/forms';\nimport { GoogleChartsModule } from 'angular-google-charts';\nimport { AppHeaderComponent } from './app-header/app-header.component';\nimport { ContactEditComponent } from './contact-edit/contact-edit.component';\nimport { SignupPageComponent } from './signup-page/signup-page.component';\nimport { TransferFundComponent } from './transfer-fund/transfer-fund.component';\nimport { MovesListComponent } from './moves-list/moves-list.component';\n// import { ChartsModule } from 'ng2-charts';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    ContactPageComponent,\n    ContactDetailsPageComponent,\n    StatisticPageComponent,\n    ContactListComponent,\n    ContactPreviewComponent,\n    ChartComponent,\n    ContactFilterComponent,\n    AppHeaderComponent,\n    ContactEditComponent,\n    SignupPageComponent,\n    TransferFundComponent,\n    MovesListComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    GoogleChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ContactService } from './../../services/contactService';\nimport { UserService } from './../../services/userService';\n\n@Component({\n  selector: 'contact-details-page',\n  templateUrl: './contact-details-page.component.html',\n  styleUrls: ['./contact-details-page.component.scss']\n})\nexport class ContactDetailsPageComponent implements OnInit {\n \n  slectedContactId: string\n  contact:any\n  user:any\n  \n  constructor(private route: ActivatedRoute, private router: Router, private contactService: ContactService, private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(data => {\n      console.log(data.id);\n      this.slectedContactId = data.id\n      // this.contact = data.contact\n    })\n    \n    this.contactService.getContactById(this.slectedContactId).subscribe((cotact) => {\n     this.contact = cotact\n    })\n\n    this.user = this.userService.getUser()\n    // this.userMoves = this.user.moves\n    console.log(this.user.moves);\n    // console.log(this.user.moves);\n    \n  }\n\n  goBack() {\n    console.log('back');\n    this.router.navigateByUrl(`contact`);\n    \n  }\n\n}\n","<section *ngIf=\"contact\"  class=\"contact-details\">\n    <!-- <p>contact-details-page works!</p> -->\n    <h2>{{contact.name}} </h2>\n    <img [src]=\"'https://robohash.org/'+contact._id\"  />\n    <h3>{{contact.phone}}</h3>\n    <button (click)=\"goBack()\" >Back</button>\n    <a routerLink=\"edit\" >\n        Edit Contact\n    </a>\n    <transfer-fund [contact]=\"contact\" ></transfer-fund>\n    <moves-list *ngIf=\"user\" title=\"Your Moves\" [contact]=\"contact\" [user]=\"user\"></moves-list>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Contact } from './../models/contact';\nimport { ContactService } from '../../services/contactService'\n\n@Component({\n  selector: 'contact-edit',\n  templateUrl: './contact-edit.component.html',\n  styleUrls: ['./contact-edit.component.scss']\n})\nexport class ContactEditComponent implements OnInit {\n\n  contact: Contact\n\n  constructor(private route: ActivatedRoute, private router: Router, private contactService: ContactService) { }\n\n  ngOnInit(): void {\n    // console.log();\n    this.route.params.subscribe(data => {\n      console.log(data.id);\n      this.loadContact(data.id)\n    })\n\n  }\n\n  loadContact(id) {\n    if (id) {\n      const contact$ = this.contactService.getContactById(id)\n      console.log(contact$);\n      contact$.subscribe(contact => {\n        this.contact = contact\n      })\n    } else this.contact = this.contactService.getEmptyContact()\n  }\n\n  async addContact(ev: Event) {\n    ev.preventDefault();\n    if (!this.contact.name) return\n    console.log(this.contact);\n    this.contactService.save(this.contact).subscribe(() => {\n      this.contact = this.contactService.getEmptyContact()\n    })\n    this.router.navigateByUrl(`contact`);\n  }\n\n  removeContact() {\n    this.contactService.remove(this.contact._id)\n    this.router.navigateByUrl(`contact`);\n  }\n\n}\n","<section>\n    <form *ngIf=\"contact\"  (submit)=\"addContact($event)\">\n        <input name=\"name\" [(ngModel)]=\"contact.name\" type=\"text\" />\n        <input name=\"phone\" [(ngModel)]=\"contact.phone\" type=\"text\" />\n        <input name=\"email\" [(ngModel)]=\"contact.email\" type=\"email\" />\n        <button>Save Contact</button>\n    </form>\n    <button (click)=\"removeContact()\" >Delete</button>\n</section>\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChange  } from '@angular/core';\nimport { Contact } from './../models/contact';\nimport { ContactService } from './../../services/contactService';\nimport  {Subscription} from 'rxjs'\n\n@Component({\n  selector: 'contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.scss']\n})\nexport class ContactListComponent implements OnInit {\n  @Input() contacts: Contact[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  //  console.log(this.contacts);\n   \n  }\n\n\n\n}\n","<!-- <section > -->\n    <ul class=\"contact-list clean-list flex wrap justify-center\">\n        <li class=\"\" *ngFor=\"let contact of contacts; let i = index\">\n            <a [routerLink]=\"[contact._id]\" >\n                <contact-preview [contact]=\"contact\"></contact-preview>\n            </a>\n        </li>\n    </ul>\n<!-- </section> -->","import { Component, OnInit, Input } from '@angular/core';\nimport { ContactService } from './../../services/contactService';\nimport { Contact } from './../models/contact';\nimport { Subscription } from 'rxjs'\n\n@Component({\n  selector: 'contact-page',\n  templateUrl: './contact-page.component.html',\n  styleUrls: ['./contact-page.component.scss']\n})\nexport class ContactPageComponent implements OnInit {\n  // @Input() filter: String\n  subscription: Subscription\n  contacts: Contact[] = []\n  // contactId: string = null\n  constructor(private contactService: ContactService) { }\n\n  ngOnInit(): void {\n    this.subscription = this.contactService.contacts$.subscribe(cotacts => {\n      this.contacts = [...cotacts]\n    })\n    this.contactService.loadContacts()\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe()\n  }\n\n  setFilter(filterBy) {\n    console.log('filterBy:', filterBy)\n    this.contactService.loadContacts(filterBy)\n  }\n \n\n}\n","<section class=\"contact-page flex col align-center\">\n    <contact-filter (setFilter)=\"setFilter($event)\" ></contact-filter>\n    <a routerLink=\"edit\" >\n        Add Contact\n    </a>\n    <contact-list  [contacts]=\"contacts\"></contact-list>\n</section>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomePageComponent } from './Home-page/home-page.component';\nimport { ContactPageComponent } from './contact-page/contact-page.component';\nimport { StatisticPageComponent } from './statistic-page/statistic-page.component';\nimport { ContactDetailsPageComponent } from './contact-details-page/contact-details-page.component';\nimport { ContactEditComponent } from './contact-edit/contact-edit.component';\nimport { SignupPageComponent } from './signup-page/signup-page.component';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: HomePageComponent, canActivate: [AuthGuard]  },\n  { path: 'contact/:id/edit', component: ContactEditComponent },\n  { path: 'contact/edit', component: ContactEditComponent },\n  { path: 'contact/:id', component: ContactDetailsPageComponent },\n  { path: 'contact', component: ContactPageComponent },\n  { path: 'statistic', component: StatisticPageComponent },\n  { path: 'signup', component: SignupPageComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}